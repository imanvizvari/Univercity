//--InheritanceDemo

//Program.cs

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InheritanceDemo
{
    class Program
    {
        static void Main(string[] args)
        {
            Person[] people = new Person[]
            {
                new Student() { Name = "Ross", Family = "Geller", UnitBaseRate = 1000, UnitCount = 20 },
                new Employee() { Name = "Monica", Family = "Geller", BaseRate = 2000, WorkingHours = 40},
                new SalesEmployee() { Name = "Chandler", Family = "Bing", BaseRate = 1000, WorkingHours = 40, TotalSales = 20000, Percentage = 0.02 },
                new Teacher() { Name = "Sheldon", Family = "Cooper", CourseCount = 5, CourseRate = 10000},
                new Student() { Name = "Leonard", Family = "Hofsteder", UnitBaseRate = 2000, UnitCount = 40 },
                //new Person() { Name = "Penni", Family = "" }
            };

            var sum = 0.0;
            for (int i = 0; i < people.Length; i++)
            {
                Console.WriteLine(people[i]);
                sum += people[i].GetBalance();
            }

            Console.WriteLine("----------------------------");
            Console.WriteLine(sum);
            Console.ReadKey();
        }
    }
}
//-------------------------
//Person.Cs

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InheritanceDemo
{
    class 

    {
        public string Name { get; set; }
        public string Family { get; set; }

        public virtual double GetBalance()
        {
            return 0;
        }

        public override string ToString()
        {
            return $"{Name}\t{Family}\t{GetBalance()}";
        }

    }
}
//-------------------------
//Employee.Cs

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InheritanceDemo
{
    class Employee:Person
    {
        public int WorkingHours { get; set; }
        public int BaseRate { get; set; }

        public override double GetBalance()
        {
            if (WorkingHours < 42)
                return WorkingHours * BaseRate * -1;
            else
                return (42 * BaseRate + (WorkingHours - 42) * 1.4 * BaseRate) * -1;

        }
    }
}
//-------------------------
//Student.Cs

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InheritanceDemo
{
    class Student:Person
    {
        public int UnitCount { get; set; }
        public int UnitBaseRate { get; set; }

        public override double GetBalance()
        {
            return UnitCount * UnitBaseRate;
        }
    }
}
//-------------------------
//Teacher.Cs

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InheritanceDemo
{
    class Teacher:Person
    {
        public int CourseCount { get; set; }
        public int CourseRate { get; set; }

        public override double GetBalance()
        {
            return -1 * CourseCount * CourseRate;
        }
    }
}
//-------------------------
//SalesEmployee.Cs

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InheritanceDemo
{
    class SalesEmployee:Employee
    {
        public double Percentage { get; set; }
        public int TotalSales { get; set; }

        public override double GetBalance()
        {
            return base.GetBalance() + (Percentage * TotalSales);
        }
    }
}