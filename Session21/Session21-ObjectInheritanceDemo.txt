//--Session21-ObjectInheritanceDemo

//Program.Cs

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ObjectInheritanceDemo
{
    class Program
    {
        static void Main(string[] args)
        {
            Person p = new Person() { Name = "Ross", Family = "Geller" , NationalCode = "1234567890" };
            Person p2 = new Person() { Name = "Ross", Family = "Geller", NationalCode = "127890" };
            Console.WriteLine(p.GetType());
            Console.WriteLine(p.GetHashCode());
            Console.WriteLine(p2.GetHashCode());
            Console.WriteLine(p.ToString());
            Console.WriteLine(p);
            Console.WriteLine(p.Equals(123));

            Console.WriteLine("------------------");
            Console.WriteLine("Hello".GetHashCode());
            Console.WriteLine(123.GetHashCode());
            Console.WriteLine("Hello".GetHashCode());





            Console.ReadKey();
        }

        static void WriteLine(object obj)
        {
            Console.WriteLine(obj.ToString());
        }
    }
}
//--------------------

//Employee.Cs

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ObjectInheritanceDemo
{
    class Employee:Person
    {
        public double Salary { get; set; }
    }
}
//--------------------

//Person.Cs

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ObjectInheritanceDemo
{
    class Person
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Family { get; set; }
        public string NationalCode { get; set; }

        public override int GetHashCode()
        {
            return NationalCode.GetHashCode();
        }

        public override string ToString()
        {
            return $"{NationalCode}, {Name} {Family}";
        }

        public override bool Equals(object obj)
        {
            //return GetHashCode() == obj.GetHashCode();
            //var other = obj as Person;
            //if (obj is Person)
            //{
            //    var other = (Person)obj;
            //    return this.Name == other.Name && this.Family == other.Family;
            //}
            //else
            //    return false;

            var other = obj as Person;
            if (other != null)
                return this.Name == other.Name && this.Family == other.Family;
            else
                return false;
        }
    }
}
//---------------------